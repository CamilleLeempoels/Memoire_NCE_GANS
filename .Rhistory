pm_barre = function(u, theta){
return(exp(-0.5 * ((u - theta[1]) / theta[2]) ** 2))
}
log_pm = function(u,theta){
return(theta[3] - 1/2 * (u/theta[2] - theta[1]/theta[2]) ** 2)
# theta[1] = mu / theta[2] = sigma / theta[3] = c
}
log_pn_cauchy = function(u){
return(log(dcauchy(u, mean(x), sd(x))))
}
m = 10000
n = 10000
x = rnorm(m, 2, 4)
size_theta = 3
# REVERSE LOGISTIC REGRESSION
x_test = rnorm(100, 2, 4)
y_test = rnorm(100, 3, 5)
ln = function(eta1, eta2) {
alpha = c(2,4)
psi = c(3,5)
n1 = length(x_test)
n2 = length(y_test)
return(
sum(log(pm_barre(x_test, alpha)*exp(eta1) / (pm_barre(x_test, alpha)*exp(eta1) + pm_barre(x_test, psi)*exp(eta2))))
+
sum(log(pm_barre(y_test, psi)*exp(eta2) / (pm_barre(y_test, psi)*exp(eta2) + pm_barre(y_test, alpha)*exp(eta1))))
)
const_test = optim(
par = c(1,1),
gr = "CG",
control = list(fnscale=-1),
fn = ln
)$par
}
# REVERSE LOGISTIC REGRESSION
x_test = rnorm(100, 2, 4)
y_test = rnorm(100, 3, 5)
ln = function(eta1, eta2) {
alpha = c(2,4)
psi = c(3,5)
n1 = length(x_test)
n2 = length(y_test)
return(
sum(log(pm_barre(x_test, alpha)*exp(eta1) / (pm_barre(x_test, alpha)*exp(eta1) + pm_barre(x_test, psi)*exp(eta2))))
+
sum(log(pm_barre(y_test, psi)*exp(eta2) / (pm_barre(y_test, psi)*exp(eta2) + pm_barre(y_test, alpha)*exp(eta1))))
)
const_test = optim(
par = c(1,1),
gr = "CG",
control = list(fnscale=-1),
fn = ln
)$par
}
print(const_test)
# REVERSE LOGISTIC REGRESSION
x_test = rnorm(100, 2, 4)
y_test = rnorm(100, 3, 5)
ln = function(eta1, eta2) {
alpha = c(2,4)
psi = c(3,5)
n1 = length(x_test)
n2 = length(y_test)
return(
sum(log(pm_barre(x_test, alpha)*exp(eta1) / (pm_barre(x_test, alpha)*exp(eta1) + pm_barre(x_test, psi)*exp(eta2))))
+
sum(log(pm_barre(y_test, psi)*exp(eta2) / (pm_barre(y_test, psi)*exp(eta2) + pm_barre(y_test, alpha)*exp(eta1))))
)
}
const_test = optim(
par = c(1,1),
gr = "CG",
control = list(fnscale=-1),
fn = ln
)$par
# REVERSE LOGISTIC REGRESSION
x_test = rnorm(100, 2, 4)
y_test = rnorm(100, 3, 5)
ln = function(eta1, eta2) {
alpha = c(2,4)
psi = c(3,5)
n1 = length(x_test)
n2 = length(y_test)
return(
sum(log(pm_barre(x_test, alpha)*exp(eta1) / (pm_barre(x_test, alpha)*exp(eta1) + pm_barre(x_test, psi)*exp(eta2))))
+
sum(log(pm_barre(y_test, psi)*exp(eta2) / (pm_barre(y_test, psi)*exp(eta2) + pm_barre(y_test, alpha)*exp(eta1))))
)
}
const_test = optim(
par = c(1,1),
gr = "CG",
control = list(fnscale=-1),
fn = ln
)
# REVERSE LOGISTIC REGRESSION
x_test = rnorm(100, 2, 4)
y_test = rnorm(100, 3, 5)
ln = function(eta1, eta2) {
alpha = c(2,4)
psi = c(3,5)
n1 = length(x_test)
n2 = length(y_test)
return(
sum(log(pm_barre(x_test, alpha)*exp(eta1) / (pm_barre(x_test, alpha)*exp(eta1) + pm_barre(x_test, psi)*exp(eta2))))
+
sum(log(pm_barre(y_test, psi)*exp(eta2) / (pm_barre(y_test, psi)*exp(eta2) + pm_barre(y_test, alpha)*exp(eta1))))
)
}
const_test = optim(
par = c(1,1,1),
gr = "CG",
control = list(fnscale=-1),
fn = ln
)
# REVERSE LOGISTIC REGRESSION
x_test = rnorm(100, 2, 4)
y_test = rnorm(100, 3, 5)
f_test = function(eta1, eta2) {
alpha = c(2,4)
psi = c(3,5)
n1 = length(x_test)
n2 = length(y_test)
return(
sum(log(pm_barre(x_test, alpha)*exp(eta1) / (pm_barre(x_test, alpha)*exp(eta1) + pm_barre(x_test, psi)*exp(eta2))))
+
sum(log(pm_barre(y_test, psi)*exp(eta2) / (pm_barre(y_test, psi)*exp(eta2) + pm_barre(y_test, alpha)*exp(eta1))))
)
}
const_test = optim(
par = c(1,1),
gr = "CG",
control = list(fnscale=-1),
fn = f_test
)
# REVERSE LOGISTIC REGRESSION
x_test = rnorm(100, 2, 4)
y_test = rnorm(100, 3, 5)
f_test = function(eta1, eta2) {
alpha = c(2,4)
psi = c(3,5)
n1 = length(x_test)
n2 = length(y_test)
return(
sum(log(pm_barre(x_test, alpha)*exp(eta1) / (pm_barre(x_test, alpha)*exp(eta1) + pm_barre(x_test, psi)*exp(eta2))))
+
sum(log(pm_barre(y_test, psi)*exp(eta2) / (pm_barre(y_test, psi)*exp(eta2) + pm_barre(y_test, alpha)*exp(eta1))))
)
}
const_test = optim(
par = c(0,0),
gr = "CG",
control = list(fnscale=-1),
fn = f_test
)
# REVERSE LOGISTIC REGRESSION
x_test = rnorm(100, 2, 4)
y_test = rnorm(100, 3, 5)
f_test = function(eta) {
alpha = c(2,4)
psi = c(3,5)
n1 = length(x_test)
n2 = length(y_test)
return(
sum(log(pm_barre(x_test, alpha)*exp(eta[1]) / (pm_barre(x_test, alpha)*exp(eta[1]) + pm_barre(x_test, psi)*exp(eta[2]))))
+
sum(log(pm_barre(y_test, psi)*exp(eta[2]) / (pm_barre(y_test, psi)*exp(eta[2]) + pm_barre(y_test, alpha)*exp(eta[1]))))
)
}
const_test = optim(
par = c(0,0),
gr = "CG",
control = list(fnscale=-1),
fn = f_test
)
print(const_test)
# REVERSE LOGISTIC REGRESSION
x_test = rnorm(100, 2, 4)
y_test = rnorm(100, 3, 5)
f_test = function(eta) {
alpha = c(2,4)
psi = c(3,5)
n1 = length(x_test)
n2 = length(y_test)
return(
sum(log(pm_barre(x_test, alpha)*exp(eta[1]) / (pm_barre(x_test, alpha)*exp(eta[1]) + pm_barre(x_test, psi)*exp(eta[2]))))
+
sum(log(pm_barre(y_test, psi)*exp(eta[2]) / (pm_barre(y_test, psi)*exp(eta[2]) + pm_barre(y_test, alpha)*exp(eta[1]))))
)
}
const_test = optim(
par = c(0,0),
gr = "CG",
control = list(fnscale=-1),
fn = f_test
)$par
print(exp(-const_test + log(0.5)))
# REVERSE LOGISTIC REGRESSION
x_test = rnorm(1000, 2, 4)
y_test = rnorm(1000, 3, 5)
f_test = function(eta) {
alpha = c(2,4)
psi = c(3,5)
n1 = length(x_test)
n2 = length(y_test)
return(
sum(log(pm_barre(x_test, alpha)*exp(eta[1]) / (pm_barre(x_test, alpha)*exp(eta[1]) + pm_barre(x_test, psi)*exp(eta[2]))))
+
sum(log(pm_barre(y_test, psi)*exp(eta[2]) / (pm_barre(y_test, psi)*exp(eta[2]) + pm_barre(y_test, alpha)*exp(eta[1]))))
)
}
const_test = optim(
par = c(0,0),
gr = "CG",
control = list(fnscale=-1),
fn = f_test
)$par
print(exp(-const_test + log(0.5)))
# REVERSE LOGISTIC REGRESSION
x_test = rnorm(10000, 2, 4)
y_test = rnorm(10000, 3, 5)
f_test = function(eta) {
alpha = c(2,4)
psi = c(3,5)
n1 = length(x_test)
n2 = length(y_test)
return(
sum(log(pm_barre(x_test, alpha)*exp(eta[1]) / (pm_barre(x_test, alpha)*exp(eta[1]) + pm_barre(x_test, psi)*exp(eta[2]))))
+
sum(log(pm_barre(y_test, psi)*exp(eta[2]) / (pm_barre(y_test, psi)*exp(eta[2]) + pm_barre(y_test, alpha)*exp(eta[1]))))
)
}
const_test = optim(
par = c(0,0),
gr = "CG",
control = list(fnscale=-1),
fn = f_test
)$par
print(exp(-const_test + log(0.5)))
# REVERSE LOGISTIC REGRESSION
x_test = rnorm(100000, 2, 4)
y_test = rnorm(100000, 3, 5)
f_test = function(eta) {
alpha = c(2,4)
psi = c(3,5)
n1 = length(x_test)
n2 = length(y_test)
return(
sum(log(pm_barre(x_test, alpha)*exp(eta[1]) / (pm_barre(x_test, alpha)*exp(eta[1]) + pm_barre(x_test, psi)*exp(eta[2]))))
+
sum(log(pm_barre(y_test, psi)*exp(eta[2]) / (pm_barre(y_test, psi)*exp(eta[2]) + pm_barre(y_test, alpha)*exp(eta[1]))))
)
}
const_test = optim(
par = c(0,0),
gr = "CG",
control = list(fnscale=-1),
fn = f_test
)$par
print(exp(-const_test + log(0.5)))
# REVERSE LOGISTIC REGRESSION
x_test = rnorm(100000, 2, 4)
y_test = rnorm(100000, 10, 10)
f_test = function(eta) {
alpha = c(2,4)
psi = c(3,5)
n1 = length(x_test)
n2 = length(y_test)
return(
sum(log(pm_barre(x_test, alpha)*exp(eta[1]) / (pm_barre(x_test, alpha)*exp(eta[1]) + pm_barre(x_test, psi)*exp(eta[2]))))
+
sum(log(pm_barre(y_test, psi)*exp(eta[2]) / (pm_barre(y_test, psi)*exp(eta[2]) + pm_barre(y_test, alpha)*exp(eta[1]))))
)
}
const_test = optim(
par = c(0,0),
gr = "CG",
control = list(fnscale=-1),
fn = f_test
)$par
print(exp(-const_test + log(0.5)))
# REVERSE LOGISTIC REGRESSION
x_test = rnorm(100000, 2, 4)
y_test = rnorm(100000, 10, 10)
f_test = function(eta) {
alpha = c(2,4)
psi = c(3,5)
n1 = length(x_test)
n2 = length(y_test)
return(
sum(log(pm_barre(x_test, alpha)*exp(eta[1]) / (pm_barre(x_test, alpha)*exp(eta[1]) + pm_barre(x_test, psi)*exp(eta[2]))))
+
sum(log(pm_barre(y_test, psi)*exp(eta[2]) / (pm_barre(y_test, psi)*exp(eta[2]) + pm_barre(y_test, alpha)*exp(eta[1]))))
)
}
const_test = optim(
par = c(0,0),
gr = "CG",
control = list(fnscale=-1),
fn = f_test
)$par
print(exp(-const_test + log(0.5)))
print(c(4*sqrt(2*pi), 10*sqrt(2*pi)))
# REVERSE LOGISTIC REGRESSION
x_test = rnorm(100000, 2, 4)
y_test = rnorm(100000, 2, 4)
f_test = function(eta) {
alpha = c(2,4)
psi = c(3,5)
n1 = length(x_test)
n2 = length(y_test)
return(
sum(log(pm_barre(x_test, alpha)*exp(eta[1]) / (pm_barre(x_test, alpha)*exp(eta[1]) + pm_barre(x_test, psi)*exp(eta[2]))))
+
sum(log(pm_barre(y_test, psi)*exp(eta[2]) / (pm_barre(y_test, psi)*exp(eta[2]) + pm_barre(y_test, alpha)*exp(eta[1]))))
)
}
const_test = optim(
par = c(0,0),
gr = "CG",
control = list(fnscale=-1),
fn = f_test
)$par
print(exp(-const_test + log(0.5)))
print(c(4*sqrt(2*pi), 10*sqrt(2*pi)))
# REVERSE LOGISTIC REGRESSION
x_test = rnorm(100000, 2, 4)
y_test = rnorm(100000, 2, 4)
f_test = function(eta) {
alpha = c(2,4)
psi = c(3,5)
n1 = length(x_test)
n2 = length(y_test)
return(
sum(log(pm_barre(x_test, alpha)*exp(eta[1]) / (pm_barre(x_test, alpha)*exp(eta[1]) + pm_barre(x_test, psi)*exp(eta[2]))))
+
sum(log(pm_barre(y_test, psi)*exp(eta[2]) / (pm_barre(y_test, psi)*exp(eta[2]) + pm_barre(y_test, alpha)*exp(eta[1]))))
)
}
const_test = optim(
par = c(0,0),
gr = "CG",
control = list(fnscale=-1),
fn = f_test
)$par
print(exp(-const_test + log(0.5)))
print(c(4*sqrt(2*pi), 10*sqrt(2*pi)))
# REVERSE LOGISTIC REGRESSION
pm_barre = function(u, theta){
return(exp(-0.5 * ((u - theta[1]) / theta[2]) ** 2))
}
x_test = rnorm(100000, 2, 4)
y_test = rnorm(100000, 2, 4)
f_test = function(eta) {
alpha = c(2,4)
psi = c(3,5)
n1 = length(x_test)
n2 = length(y_test)
return(
sum(log(pm_barre(x_test, alpha)*exp(eta[1]) / (pm_barre(x_test, alpha)*exp(eta[1]) + pm_barre(x_test, psi)*exp(eta[2]))))
+
sum(log(pm_barre(y_test, psi)*exp(eta[2]) / (pm_barre(y_test, psi)*exp(eta[2]) + pm_barre(y_test, alpha)*exp(eta[1]))))
)
}
const_test = optim(
par = c(0,0),
gr = "CG",
control = list(fnscale=-1),
fn = f_test
)$par
print(exp(-const_test + log(0.5)))
update.packages()
library(rlang)
install.packages('rlang')
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
